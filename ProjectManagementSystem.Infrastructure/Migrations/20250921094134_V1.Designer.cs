// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectManagementSystem.Infrastructure.Data;

#nullable disable

namespace ProjectManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250921094134_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectManagementSystem.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("CompanyNames", "ProjectManagementSystem.Domain.Entities.Project.CompanyNames#CompanyNames", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CompanyNameForCostumer")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("CompanyNameForCostumer");

                            b1.Property<string>("CompanyNameForExecutor")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("CompanyNameForExecutor");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "ProjectManagementSystem.Domain.Entities.Project.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("Name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Periods", "ProjectManagementSystem.Domain.Entities.Project.Periods#Periods", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTimeOffset>("EndDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("EndDate");

                            b1.Property<DateTimeOffset>("StartDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("StartDate");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Priority", "ProjectManagementSystem.Domain.Entities.Project.Priority#Priority", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("Priority");
                        });

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
